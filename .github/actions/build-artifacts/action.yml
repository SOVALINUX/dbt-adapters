name: "Build artifacts"
description: "Build artifacts using `hatch` as the default build frontend"

inputs:
    build-command:
        description: "The command to build distributable artifacts"
        default: "hatch build"
    check-command:
        description: "The command to check built artifacts"
        default: "hatch run build:check-all"
    archive-name:
        description: "Name for the GitHub archive for uploading built artifacts, leave blank for no upload"
        default: ""
    archive-retention:
        description: "Duration in days to keep the GitHub archive, requires `archive-name`"
        default: "3"
    working-dir:
        description: "Where to run commands from, primarily supports namespace packaging"
        default: "./"

runs:
    using: composite
    steps:
    -   name: "[DEBUG] Inputs"
        shell: bash
        run: |
            echo build-command     : ${{ inputs.build-command }}
            echo check-command     : ${{ inputs.check-command }}
            echo archive-name      : ${{ inputs.archive-name }}
            echo archive-retention : ${{ inputs.archive-retention }}
            echo working-dir       : ${{ inputs.working-dir }}

    -   name: "Build artifacts"
        shell: bash
        working-directory: ${{ inputs.working-dir }}
        run: ${{ inputs.build-command }}

    -   name: "[INFO] Built artifacts"
        shell: bash
        working-directory: ${{ inputs.working-dir }}
        run: |
            title="Built artifacts"
            message=$(ls ./dist)
            echo "::notice title=${{ env.NOTIFICATION_PREFIX }}: $title::$message"

    -   name: "Check artifacts"
        shell: bash
        working-directory: ${{ inputs.working-dir }}
        run: ${{ inputs.check-command }}

    -   name: "Upload artifacts"
        if: ${{ !inputs.archive-name == '' }}
        uses: actions/upload-artifact@v4
        with:
            name: ${{ inputs.archive-name }}
            path: ${{ inputs.working-dir }}dist/
            retention-days: ${{ inputs.archive-retention }}

    -   name: "[INFO] Uploaded artifacts"
        if: ${{ !inputs.archive-name == '' }}
        shell: bash
        run: |
            title="Uploaded artifacts"
            message="Uploaded artifacts to ${{ inputs.archive-name }}"
            echo "::notice title=${{ env.NOTIFICATION_PREFIX }}: $title::$message"
