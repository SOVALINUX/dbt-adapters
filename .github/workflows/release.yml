name: "Release"
run-name: "Release `${{ inputs.package }}==${{ inputs.version }}` to ${{ inputs.deploy-to }}"

on:
  workflow_dispatch:
    inputs:
      package:
        description: "Choose what to release"
        type: choice
        options:
          - "dbt-adapters"
          - "dbt-tests-adapter"
      target-branch:
        description: "Choose what branch to release from"
        type: string
        default: "main"
      version:
        description: "The release version number (i.e. 1.0.0b1)"
        type: string
        required: true
      deploy-to:
        description: "Choose where to publish"
        type: choice
        options:
        - "prod"
        - "test"
      nightly-release:
        description: "Is this the nightly release to the dev environment?"
        type: boolean
        default: false
  workflow_call:
    inputs:
      package:
        description: "Choose what to release"
        type: string
        default: "dbt-adapters"
      target-branch:
        description: "Choose what branch to release from"
        type: string
        default: "main"
      version:
        description: "The release version number (i.e. 1.0.0b1)"
        type: string
        required: true
      deploy-to:
        description: "Choose where to publish"
        type: string
        default: "prod"
      nightly-release:
        description: "Is this the nightly release to the dev environment?"
        type: boolean
        default: false

# this is the permission that allows creating a new release to both GitHub and PyPI
permissions:
  contents: write
  id-token: write

# will cancel previous workflows triggered by the same event and for the same package and environment
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ inputs.package }}-${{ inputs.version }}-${{ inputs.deploy-to }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  release-inputs:
    name: "Release inputs"
    runs-on: ubuntu-latest
    outputs:
      working-dir: ${{ steps.release-inputs.outputs.working-dir }}
      run-unit-tests: ${{ steps.release-inputs.outputs.run-unit-tests }}
      archive-name: ${{ steps.release-inputs.outputs.archive-name }}
    steps:
      - name: "Inputs"
        id: release-inputs
        run: |
          working_dir="./"
          run_unit_tests=true
          archive_name=${{ inputs.package }}-${{ inputs.version_number }}-${{ inputs.deploy-to }}

          if test "${{ inputs.package }}" = "dbt-tests-adapter"
          then
            working_dir="./dbt-tests-adapter/"
            run_unit_tests=false
          fi

          echo "working-dir=$working_dir" >> $GITHUB_OUTPUT
          echo "run-unit-tests=$run_unit_tests" >> $GITHUB_OUTPUT
          echo "archive-name=$archive_name" >> $GITHUB_OUTPUT

      - name: "[DEBUG]"
        run: |
          echo package        : ${{ inputs.package }}
          echo working-dir    : ${{ steps.release-inputs.outputs.working-dir }}
          echo run-unit-tests : ${{ steps.release-inputs.outputs.run-unit-tests }}
          echo archive-name   : ${{ steps.release-inputs.outputs.archive-name }}

  bump-version-generate-changelog:
    name: "Bump package version, Generate changelog"
    uses: dbt-labs/dbt-adapters/.github/workflows/release_prep_hatch.yml@main
    needs: [release-inputs]
    with:
      version_number: ${{ inputs.version_number }}
      deploy_to: ${{ inputs.deploy-to }}
      nightly_release: ${{ inputs.nightly_release }}
      target_branch: ${{ inputs.target_branch }}
      working-dir: ${{ needs.release-inputs.outputs.working-dir }}
      run-unit-tests: ${{ fromJSON(needs.release-inputs.outputs.run-unit-tests) }}
    secrets: inherit

  log-outputs-bump-version-generate-changelog:
    name: "[Log output] Bump package version, Generate changelog"
    if: ${{ !failure() && !cancelled() }}
    needs: [release-inputs, bump-version-generate-changelog]
    runs-on: ubuntu-latest
    steps:
      - name: Print variables
        run: |
          echo Final SHA     : ${{ needs.bump-version-generate-changelog.outputs.final_sha }}
          echo Changelog path: ${{ needs.bump-version-generate-changelog.outputs.changelog_path }}

  build-artifacts:
    name: "Build ${{ inputs.package }} ${{ inputs.version }}"
    needs: [release-inputs, bump-version-generate-changelog]
    uses: dbt-labs/dbt-adapters/.github/workflows/build.yml@update-workflows
    with:
      package: ${{ inputs.package }}
      version: ${{ inputs.version }}
      deploy-to: ${{ inputs.deploy-to }}

  # TODO: update GH release to handle adding dbt-tests-adapter and dbt-adapter assets to the same release
  publish-github:
    name: "Publish to GitHub"
    if: ${{ !failure() && !cancelled() && inputs.package == 'dbt-adapters' }}
    needs: [build-artifacts, bump-version-generate-changelog]
    uses: dbt-labs/dbt-adapters/.github/workflows/publish-github.yml@update-workflows
    with:
      archive-name: ${{ needs.build-artifacts.outputs.archive-name }}
      version: ${{ inputs.version }}
      sha: ${{ needs.bump-version-generate-changelog.outputs.final_sha }}
      changelog-path: ${{ needs.bump-version-generate-changelog.outputs.changelog_path }}
      deploy-to: ${{ inputs.deploy-to }}

  publish-0pypi:
    name: "Publish to PyPI"
    needs: [build-artifacts]
    uses: dbt-labs/dbt-adapters/.github/workflows/publish-github.yml@update-workflows
    with:
      archive-name: ${{ needs.build-artifacts.outputs.archive-name }}
      version: ${{ inputs.version }}
      deploy-to: ${{ inputs.deploy-to }}
